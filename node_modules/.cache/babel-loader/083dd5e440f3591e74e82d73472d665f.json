{"ast":null,"code":"var _jsxFileName = \"/Users/miladrezaee/ReactApps/seasons/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport LoadingScreen from \"./LoadingScreen\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: null\n    };\n  }\n\n  //same as\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {lat: null, errorMessage: null};\n  // }\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n  render() {\n    if (this.state.lat) {\n      return React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    } else if (this.state.errorMessage) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    return React.createElement(LoadingScreen, {\n      message: \"Please accept location request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/miladrezaee/ReactApps/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","LoadingScreen","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,YAAY,EAAE;AAA1B,KADsB;AAAA;;AAG9B;AACA;AACA;AAEA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACKC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAACR,MAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,KAAd,CADlB,EAEKC,GAAD,IAAS,KAAKH,QAAL,CAAc;AAACP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAAnB,KAAd,CAFb;AAIH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKd,KAAL,CAAWC,GAAd,EAAmB;AACf,aAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO,IAAG,KAAKD,KAAL,CAAWE,YAAd,EAA4B;AAC/B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKF,KAAL,CAAWE,YAAxB,CAAP;AACH;;AACD,WAAO,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAC,gCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAxB6B;;AA2BlCP,QAAQ,CAACmB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport LoadingScreen from \"./LoadingScreen\";\n\nclass App extends React.Component {\n    state = {lat: null, errorMessage: null};\n    \n    //same as\n    // constructor(props) {\n    //     super(props);\n\n    //     this.state = {lat: null, errorMessage: null};\n    // }\n    \n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({lat: position.coords.latitude}),\n            (err) => this.setState({errorMessage: err.message})\n        );\n    }\n\n    render(){\n        if(this.state.lat) {\n            return <SeasonDisplay lat={this.state.lat} />\n        } else if(this.state.errorMessage) {\n            return <div>Error: {this.state.errorMessage}</div>\n        }\n        return <LoadingScreen message=\"Please accept location request\" />\n    }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"]},"metadata":{},"sourceType":"module"}